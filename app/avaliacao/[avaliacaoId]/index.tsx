import { router, useLocalSearchParams } from "expo-router"
import { View } from "react-native"
import { TouchableOpacity } from "react-native-gesture-handler"
import { List } from "react-native-paper"
import Header from "../../../components/Header"
import Svg, { Path } from "react-native-svg"

export default function () {
  const { avaliacaoId } = useLocalSearchParams<{ avaliacaoId: string }>()
  const alunos = [
    { id: 1, nome: "Aluno 1" },
    { id: 2, nome: "Aluno 2" },
    { id: 3, nome: "Aluno 3" },
    { id: 4, nome: "Aluno 4" },
    { id: 5, nome: "Aluno 5" },
    { id: 6, nome: "Aluno 6" },
    { id: 7, nome: "Aluno 7" },
    { id: 8, nome: "Aluno 8" },
    { id: 9, nome: "Aluno 9" },
    { id: 10, nome: "Aluno 10" }
  ]

  return (
    <View>
      <Header
        back
        title={`Avaliação #${avaliacaoId}`}
        actions={(
          <TouchableOpacity onPress={() => router.push({ pathname: "/avaliacao/[avaliacaoId]/scan", params: { avaliacaoId: String(avaliacaoId) } })} style={{ padding: 10 }}>
            <Svg width={36} height={36} viewBox="0 0 36 36" fill="none">
              <Path
                d="M13.0909 0H3.27273C2.40475 0 1.57231 0.344804 0.958559 0.958559C0.344804 1.57231 0 2.40475 0 3.27273V13.0909C0 13.9589 0.344804 14.7913 0.958559 15.4051C1.57231 16.0188 2.40475 16.3636 3.27273 16.3636H13.0909C13.9589 16.3636 14.7913 16.0188 15.4051 15.4051C16.0188 14.7913 16.3636 13.9589 16.3636 13.0909V3.27273C16.3636 2.40475 16.0188 1.57231 15.4051 0.958559C14.7913 0.344804 13.9589 0 13.0909 0ZM13.0909 13.0909H3.27273V3.27273H13.0909V13.0909ZM13.0909 19.6364H3.27273C2.40475 19.6364 1.57231 19.9812 0.958559 20.5949C0.344804 21.2087 0 22.0411 0 22.9091V32.7273C0 33.5953 0.344804 34.4277 0.958559 35.0414C1.57231 35.6552 2.40475 36 3.27273 36H13.0909C13.9589 36 14.7913 35.6552 15.4051 35.0414C16.0188 34.4277 16.3636 33.5953 16.3636 32.7273V22.9091C16.3636 22.0411 16.0188 21.2087 15.4051 20.5949C14.7913 19.9812 13.9589 19.6364 13.0909 19.6364ZM13.0909 32.7273H3.27273V22.9091H13.0909V32.7273ZM32.7273 0H22.9091C22.0411 0 21.2087 0.344804 20.5949 0.958559C19.9812 1.57231 19.6364 2.40475 19.6364 3.27273V13.0909C19.6364 13.9589 19.9812 14.7913 20.5949 15.4051C21.2087 16.0188 22.0411 16.3636 22.9091 16.3636H32.7273C33.5953 16.3636 34.4277 16.0188 35.0414 15.4051C35.6552 14.7913 36 13.9589 36 13.0909V3.27273C36 2.40475 35.6552 1.57231 35.0414 0.958559C34.4277 0.344804 33.5953 0 32.7273 0ZM32.7273 13.0909H22.9091V3.27273H32.7273V13.0909ZM19.6364 27.8182V21.2727C19.6364 20.8387 19.8088 20.4225 20.1156 20.1156C20.4225 19.8088 20.8387 19.6364 21.2727 19.6364C21.7067 19.6364 22.1229 19.8088 22.4298 20.1156C22.7367 20.4225 22.9091 20.8387 22.9091 21.2727V27.8182C22.9091 28.2522 22.7367 28.6684 22.4298 28.9753C22.1229 29.2821 21.7067 29.4545 21.2727 29.4545C20.8387 29.4545 20.4225 29.2821 20.1156 28.9753C19.8088 28.6684 19.6364 28.2522 19.6364 27.8182ZM36 24.5455C36 24.9794 35.8276 25.3957 35.5207 25.7025C35.2138 26.0094 34.7976 26.1818 34.3636 26.1818H29.4545V34.3636C29.4545 34.7976 29.2821 35.2138 28.9753 35.5207C28.6684 35.8276 28.2522 36 27.8182 36H21.2727C20.8387 36 20.4225 35.8276 20.1156 35.5207C19.8088 35.2138 19.6364 34.7976 19.6364 34.3636C19.6364 33.9296 19.8088 33.5134 20.1156 33.2066C20.4225 32.8997 20.8387 32.7273 21.2727 32.7273H26.1818V21.2727C26.1818 20.8387 26.3542 20.4225 26.6611 20.1156C26.968 19.8088 27.3842 19.6364 27.8182 19.6364C28.2522 19.6364 28.6684 19.8088 28.9753 20.1156C29.2821 20.4225 29.4545 20.8387 29.4545 21.2727V22.9091H34.3636C34.7976 22.9091 35.2138 23.0815 35.5207 23.3884C35.8276 23.6952 36 24.1115 36 24.5455ZM36 31.0909V34.3636C36 34.7976 35.8276 35.2138 35.5207 35.5207C35.2138 35.8276 34.7976 36 34.3636 36C33.9296 36 33.5134 35.8276 33.2066 35.5207C32.8997 35.2138 32.7273 34.7976 32.7273 34.3636V31.0909C32.7273 30.6569 32.8997 30.2407 33.2066 29.9338C33.5134 29.6269 33.9296 29.4545 34.3636 29.4545C34.7976 29.4545 35.2138 29.6269 35.5207 29.9338C35.8276 30.2407 36 30.6569 36 31.0909Z"
                fill="black"
              />
            </Svg>
          </TouchableOpacity>
        )}
      />
      {alunos.map(aluno => (
        <List.Item
          title={aluno.nome}
          key={aluno.id}
          onPress={() => router.push({ pathname: "/avaliacao/[avaliacaoId]/aluno/[alunoId]/", params: { avaliacaoId: String(avaliacaoId), alunoId: String(aluno.id) } })}
        />
      ))}
    </View>
  )
}
